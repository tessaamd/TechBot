from aiogram import Router, types
from aiogram.filters import Command
from config import settings
from database.db import db
from keybords import kb

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:",
        reply_markup=kb.user_main_kb()
    )

@router.message(lambda message: message.text == "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
async def request_question(message: types.Message):
    await message.answer(
        f"‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å (–º–∞–∫—Å. {settings.MAX_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤):",
        reply_markup=types.ReplyKeyboardRemove()
    )

@router.message()
async def handle_user_message(message: types.Message):
    if message.chat.type != "private":
        return
    
    question = message.text.strip()
    if len(question) > settings.MAX_LENGTH:
        return await message.answer(
            f"‚ùå –í–æ–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—à–∞–µ—Ç {settings.MAX_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤!"
        )
    
    user_name = message.from_user.full_name
    if message.from_user.username:
        user_name += f" (@{message.from_user.username})"
    
    ticket_id = db.add_ticket(
        user_id=message.from_user.id,
        user_name=user_name,
        question=question
    )
    
    await message.bot.send_message(
        chat_id=settings.SUPPORT_CHAT_ID,
        text=(
            f"üÜï –ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç #{ticket_id}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n"
            f"‚ùì –í–æ–ø—Ä–æ—Å:\n{question}"
        ),
        reply_markup=kb.support_reply_kb(ticket_id)
    )
    
    await message.answer(
        "‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.",
        reply_markup=kb.user_main_kb()
    )